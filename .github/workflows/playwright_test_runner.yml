name: Playwright runner

on:
  # This is triggered from a dispatch by the openeyes/openeyes repo
  repository_dispatch:
    types: [playwright_run*]

env:
  GITHUB_REF_NAME: ${{ github.event.client_payload.GITHUB_REF_NAME }}
  GITHUB_REF: ${{ github.event.client_payload.GITHUB_REF }}
  GITHUB_HEAD_REF: ${{ github.event.client_payload.GITHUB_HEAD_REF }}
  GITHUB_BASE_REF: ${{ github.event.client_payload.GITHUB_BASE_REF }}
  GITHUB_HEAD_SHA: ${{ github.event.client_payload.GITHUB_HEAD_SHA }}
  GITHUB_BASE_SHA: ${{ github.event.client_payload.GITHUB_BASE_SHA }}
  GITHUB_PULL_REQUEST: ${{ github.event.client_payload.GITHUB_PULL_REQUEST }}
  GITHUB_REPOSITORY: ${{ github.event.client_payload.GITHUB_REPOSITORY || 'openeyes/openeyes' }} 
  GITHUB_RUN_ID: ${{ github.event.client_payload.GITHUB_RUN_ID }}
  GITHUB_RUN_NUMBER: ${{ github.event.client_payload.GITHUB_RUN_NUMBER }}
  GITHUB_RUN_ATTEMPT: ${{ github.event.client_payload.GITHUB_RUN_ATTEMPT }}

run-name: Playwright - PR ${{ github.event.client_payload.GITHUB_PULL_REQUEST }} - Attempt ${{ github.event.client_payload.GITHUB_RUN_ATTEMPT }} - Run id ${{ github.event.client_payload.GITHUB_RUN_ID }}

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # run multiple copies of the current job in parallel
        containers: [1, 2]
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Checkout
        uses: actions/checkout@v5
        # populate commit message for merge commits
        # see https://currents.dev/readme/ci-setup/github-actions
        with:
          repository: ${{ env.GITHUB_REPOSITORY }}
          ssh-key: ${{ secrets.TKL_DEPLOY_PRIVATE_KEY }}
          ref: ${{ env.GITHUB_HEAD_REF }}

      # Check if playwright.config.ts exists and set an output
      # The rest of the steps will be skipped if it does not exist, as not all branches have playwright coverage yet
      - name: Check for Playwright config
        id: check_playwright
        run: |
          if [ -f "playwright.config.ts" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Playwright config file not found!"
            echo "Skipping Playwright tests."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      # write environment variables to a docker compose .env file
      - name: Write variables to compose .envfile
        if: steps.check_playwright.outputs.exists == 'true'
        run: |
          echo "CURRENTS_RECORD_KEY=${{ secrets.CURRENTS_RECORD_KEY }}" >> protected/tests/.env
          echo "CURRENTS_PROJECT_ID=${{ secrets.CURRENTS_PROJECT_ID }}" >> protected/tests/.env
          echo "TESTS_TO_RUN=PLAYWRIGHT_CLOUD_SHORT" >> protected/tests/.env
          echo "PUID=$(id -u)" >> protected/tests/.env
          echo "SSH_PRIVATE_KEY='${{ secrets.TKL_DEPLOY_PRIVATE_KEY }}'" >> protected/tests/.env
          echo "BUILD_BRANCH=${{ env.GITHUB_HEAD_REF }}" >> protected/tests/.env
          echo "BUILD_ID=${{ env.GITHUB_REPOSITORY }}-${{ env.GITHUB_RUN_ID }}-${{ env.GITHUB_RUN_ATTEMPT}}" >> protected/tests/.env
          echo "OE_DEFAULT_BRANCH=${{ env.GITHUB_BASE_REF }}" >> protected/tests/.env

      - name: Run docker
        if: steps.check_playwright.outputs.exists == 'true'
        run: |
          docker compose -f protected/tests/docker-compose.yml --env-file protected/tests/.env run --use-aliases web

      - name: Cancel Currents run if the workflow is cancelled
        if: steps.check_playwright.outputs.exists == 'true' && cancelled()
        uses: currents-dev/cancel-run-gh-action@v1
        with:
          api-token: ${{ secrets.CURRENTS_API_KEY }}
          github-run-id: ${{ github.run_id }}
          github-run-attempt: ${{ github.run_attempt }}