name: Sample DB - Build image

# This workflow builds the sample database images for OpenEyes, supporting multiple architectures.
# It is triggered by a repository dispatch event from the openeyes/openeyes repository.
# The workflow builds images for both Intel and ARM architectures, using different database versions.
# It also creates and pushes multi-arch manifests for the built images.
# Finally, it updates the Docker Hub description for the images.
#
# Note that separate builds are needed for arm and intel architectures due to the way GHA Qemu emulation works for database images.

on:
  # This is triggered from a dispatch by the openeyes/openeyes repo
  repository_dispatch:
    types: [build-oe-sample-db_*]
  workflow_dispatch:

env:
  DOCKER_ORG: toukanlabsdocker
  DOCKER_IMAGE: oe-sample-db
  IMAGE_SUFFIX: ""
  # The next 2 come from the dispatch action, which uses rlespinasse/github-slug-action to generate the refs
  GITHUB_REF_SLUG: ${{ github.event.client_payload.message.GITHUB_REF_SLUG }}
  GITHUB_REF_NAME: ${{ github.event.client_payload.message.GITHUB_REF_NAME }}

jobs:
  build-and-push:
    name: Build and Push ${{ matrix.db-image }}:${{ matrix.db-image-version }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          # mariadb 10.11 (primary)
          - db-image: "mariadb"
            db-image-version: "10.11"
            primary: true
            runner: ubuntu-latest
            arch: amd64
            platform: linux/amd64
          - db-image: "mariadb"
            db-image-version: "10.11"
            primary: true
            runner: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64

          # mariadb 11.8
          - db-image: "mariadb"
            db-image-version: "11.8"
            primary: false
            runner: ubuntu-latest
            arch: amd64
            platform: linux/amd64
          - db-image: "mariadb"
            db-image-version: "11.8"
            primary: false
            runner: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64

          # mysql 8.0
          - db-image: "mysql"
            db-image-version: "8.0"
            primary: false
            runner: ubuntu-latest
            arch: amd64
            platform: linux/amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: openeyes/sample
          ref: ${{ env.GITHUB_REF_NAME }}
          ssh-key: ${{ secrets.TKL_DEPLOY_PRIVATE_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Docker metadata tags (arch-specific)
        id: meta
        uses: toukanlabs/build-tag-gen@v6
        with:
          image-name: ${{ env.DOCKER_ORG }}/${{ env.DOCKER_IMAGE }}
          slug: ${{ env.GITHUB_REF_SLUG }}
          prefix: ${{ matrix.db-image }}-${{ matrix.db-image-version }}
          suffix: ${{ env.IMAGE_SUFFIX }}
          arch: ${{ matrix.arch }}
          allow-latest-tag: true
          is-primary: ${{ matrix.primary }}
          docker-user: ${{ secrets.DOCKER_USERNAME }}
          docker-pass: ${{ secrets.DOCKER_PAT }}

      - name: Build image for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          build-args: |
            MYSQLIMAGENAME=${{ matrix.db-image }}:${{ matrix.db-image-version }}
          tags: tempimage:${{ matrix.arch }}
          platforms: ${{ matrix.platform }}

      - name: Tag and push all tags for ${{ matrix.platform }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          ARCH: ${{ matrix.arch }}
        run: |
          echo "$TAGS" | while read -r tag; do
            [ -z "$tag" ] && continue
            echo "::group:: Tagging with $tag"
            docker tag tempimage:${ARCH} "$tag"
            docker push "$tag"
            echo "::endgroup::"
          done

  manifest:
    name: Create and Push Multi-Arch Manifests
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - db-image: "mariadb"
            db-image-version: "10.11"
            primary: true
          - db-image: "mysql"
            db-image-version: "8.0"
            primary: false
          - db-image: "mariadb"
            db-image-version: "11.8"
            primary: false

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Docker metadata tags (multi-arch)
        id: meta
        uses: toukanlabs/build-tag-gen@v6
        with:
          image-name: ${{ env.DOCKER_ORG }}/${{ env.DOCKER_IMAGE }}
          slug: ${{ env.GITHUB_REF_SLUG }}
          prefix: ${{ matrix.db-image }}-${{ matrix.db-image-version }}
          suffix: ${{ env.IMAGE_SUFFIX }}
          allow-latest-tag: true
          is-primary: ${{ matrix.primary }}
          docker-user: ${{ secrets.DOCKER_USERNAME }}
          docker-pass: ${{ secrets.DOCKER_PAT }}

      - name: Remove existing manifest lists (ignore errors)
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while read tag; do
            docker manifest rm "$tag" || true
            docker manifest rm "$tag-amd64" || true
            docker manifest rm "$tag-arm64" || true
          done

      - name: Create and push multi-arch manifests for all tags
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while read tag; do
            docker manifest create "$tag" \
              --amend "$tag-amd64" \
              --amend "$tag-arm64"
            docker manifest push "$tag"
          done

  update-docker-hub-description:
    name: Update docker hub description
    needs: manifest
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: toukanlabsdocker/oe-sample-db